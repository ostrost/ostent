// Code generated by go-bindata.
// sources:
// define_page.html
// index.html
// DO NOT EDIT!

// +build bin

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _define_pageHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x5c\x7b\x6f\xdb\x38\x12\xff\x2a\x3c\xdf\x16\x68\x71\x2b\xb9\x49\x9b\xb6\x28\x5c\x1f\xda\x38\x77\x2b\x5c\x1e\x46\x93\xf4\x70\x30\x84\x2e\x6d\x8d\x6c\x22\x92\xa8\x25\xa9\x38\x39\xe0\xbe\xfb\x81\x7a\x91\xb2\x65\xeb\x61\xa9\xcd\xe6\x9f\x24\x6b\x69\x7e\x33\xf3\xe3\x90\xf3\x58\xd6\xb3\x99\x03\x2e\x09\x00\x0d\x42\xbc\x84\x81\x6d\x8f\x1c\x72\x8f\x16\x1e\xe6\xfc\xd3\x40\xd0\xd0\x98\x63\x36\x18\x97\x7c\x68\x08\x22\x3c\x18\x8c\x47\xab\xe3\xec\xc9\xea\x04\xf9\x98\x2d\x49\x60\xcc\xa9\x10\xd4\x37\x5e\x0f\xc6\x23\x8c\x56\x0c\xdc\x4f\x83\xe1\x00\xc5\x12\x9f\x06\x2b\xca\x45\x80\x7d\x40\xb3\x19\x32\x27\x58\x60\x93\x3f\x72\x01\xfe\x77\xca\x05\x04\xc2\xcc\x9e\x7f\xe7\x2b\xca\x04\xb2\xed\xc1\xb8\xee\x9b\xa3\x21\x1e\xa3\x5c\xe5\x4a\x88\x90\x7f\x1c\x0e\xd7\xeb\xb5\x49\xb9\x60\x94\x0b\x73\x41\xfd\x61\x22\x3d\x64\xe0\x01\xe6\xc0\x87\x1e\x16\xc0\xc5\xdf\x17\x7e\xf8\x29\x57\x74\x15\xbf\xf3\x0d\x18\x27\x34\x88\x6d\x48\xa4\xa4\x86\xd1\x70\x75\x3c\x1e\x0d\x1d\x72\x3f\x9e\xcd\x88\x5b\x90\xb8\x0d\x97\x0c\x3b\x50\xca\xa3\xe1\x81\x2b\x34\x4a\xba\xb5\x6f\xe3\x51\x6a\x08\xb2\xed\xff\x25\x36\x27\xe6\x42\xe0\x24\xb6\x95\xae\x29\x23\xcb\x95\xa8\x5e\x53\xee\x63\xcf\x1b\x8f\xfe\x62\x18\xc8\x30\x94\xe2\x09\xe1\x82\x91\x39\xb2\x6d\x14\x85\x68\xc4\x43\x1c\x64\x30\xeb\x15\x11\xc0\x43\xbc\x00\x23\x64\x32\x6a\xe4\xc3\x5d\xcb\x1a\x85\x82\xf8\xf0\xdd\xa5\xcc\xc7\xc9\xaa\xc6\x6f\xab\x5f\x89\x7a\xb5\x0a\x85\x9f\x9a\x5b\x8c\xae\x11\x3c\x84\x38\x70\xc0\x41\x2b\x96\xba\x50\x0c\xe7\x05\xf5\x22\x3f\x40\x02\x1e\x44\xe2\x3e\x8a\xe1\x8d\xa3\xe2\x6b\xda\x42\x87\x98\x61\x9f\x9b\xe7\x38\x30\x2f\x61\x89\x05\xb9\x07\xdb\xe6\x2b\xba\x36\xe4\x8f\x15\x71\x60\x36\x03\x8f\x83\x6d\xcb\xbf\xf5\x0f\x25\xf7\x92\xdd\x23\x8d\xdd\x58\x31\xbd\x07\xe6\x7a\x74\x1d\x07\x47\xba\x4d\xce\x29\x76\x10\xbe\x5f\x22\x87\xf0\xd0\xc3\x8f\x88\x86\x82\xd0\x80\x0f\xd2\xe8\xc9\xc9\x4b\xed\xb9\xf1\x48\x70\x17\x9b\x15\x87\x43\x81\xfe\xcc\x06\x43\xfe\x40\xc5\xc5\x40\xae\x47\xb1\x48\x63\xd3\x34\x4d\x94\xf2\x9c\xe9\x4f\x23\xfe\x68\x27\xcb\x29\x83\x1e\x66\x4b\x30\x8e\x7a\xe4\x2d\xf2\xf4\x85\xf5\x21\x88\x50\xee\x98\xfc\x63\x30\x1e\x79\xa4\xa0\x9d\x04\x61\x24\x8c\x25\xa3\x51\x38\xd8\xf5\xc0\xf0\xf0\x1c\xbc\x64\x1d\x02\xba\x66\x38\x1c\x8c\x19\x5d\xf3\x6d\x47\x75\xa1\x79\x24\x04\x0d\x06\xe3\x51\xf2\x47\xf6\x4a\xfa\x5f\x71\x08\x21\x0e\x0b\x1a\x38\x98\x3d\xca\x25\xc4\x73\x0f\x1c\x6d\x97\x6a\x6c\x7c\x9e\x73\xea\x45\x02\xe2\x50\x4f\x10\x4a\x68\xde\xa7\xbd\x3c\x22\x2e\xf3\x88\x30\xcf\x81\x73\xf3\x37\x06\xae\x8c\x8d\x7c\xd7\x2b\x97\x51\xc1\xf0\x2a\xa0\xb3\x07\xc1\xf0\xa9\x04\x89\x43\xcd\xa8\x14\xb8\x81\x07\xd1\xa3\x77\x17\x94\x41\x27\xde\xc5\x40\x1b\xde\x55\xbd\x9e\xfa\x86\xfe\xb6\xe9\x5d\xfa\x53\x86\xe4\x30\xf2\xb6\x77\x05\xfc\xb1\x27\x14\x5e\x27\xbb\x40\x05\xbf\x26\x2d\x4f\xd9\x10\x06\x5b\x47\x9d\x58\x01\x76\x36\x76\x7e\x72\xfc\xa1\x05\xf5\xd4\xb9\x36\x05\x46\xa8\x93\x1d\xa7\xfb\xdf\xd6\x0e\xc6\xc1\x18\x7d\xc3\x5e\x04\xfb\x05\x07\xea\x9c\x4e\x32\x0e\xc3\xc1\x12\xd0\x2f\x1e\x46\x1f\x3f\xa5\x0e\x7b\xd8\x3c\x27\x5c\x14\x93\x24\x8b\x37\x70\x95\xed\x85\xac\xa5\xce\xec\x35\x71\xc4\xca\x78\xc3\xc0\x8f\x17\xec\x17\x0f\x9b\x89\x97\xc8\xb6\xfd\x6c\x25\x9a\xfb\x9b\x42\xc5\x6e\x6b\x89\xa8\x1c\xc2\xf0\xd2\x4a\x69\x5c\x54\x58\xc8\xbc\xdb\xf9\xea\x67\xe4\xae\x0b\xf0\xfb\x4d\x5e\x17\xe0\xd3\xe4\xdc\x6b\x90\xba\xa4\x55\xdd\xe4\xae\x44\x7d\xd7\x99\xeb\x00\xd6\x9e\x63\xea\x8a\xe9\xe8\x39\x77\xc5\x3a\x3a\x49\x5e\x0a\xa9\x6e\xf6\x52\x12\x3d\xa6\xaf\x58\x49\x27\xf9\x4b\x21\xd5\x4b\x60\xea\xfd\xce\x32\x58\x31\x22\xfa\x4c\x61\xd9\x06\x6f\x7e\xa4\xdf\x50\x81\xbd\x36\x82\xb7\x1c\x5a\xe5\xcc\x7f\x30\xa8\x48\x99\x3b\xf5\xbd\x68\x97\x6a\x7d\xf0\x55\xae\xf5\xc1\x6f\x9d\x6c\x65\xfa\x93\xf2\xff\x22\x81\x53\x99\xfe\x76\x67\x50\x09\x11\xd3\x7e\x20\x86\x5c\x81\x03\x21\xe4\x62\x6c\x42\x38\x58\x60\x23\xe2\x10\x2e\x44\xbc\x4d\x33\x5d\xd3\x85\xd0\xf7\xe3\x5e\x15\x68\xbe\x4c\x21\x14\x6b\x39\x44\xc5\x32\xfe\x89\xea\x86\x89\xdb\x6f\xd9\x30\x21\xfc\x0e\x45\x1c\x2f\xa1\x61\xe9\x30\x71\x3b\xaa\x1c\x94\x05\x5d\x57\x0f\xed\xb9\x7b\x8e\xc5\x83\x64\xa3\xe7\xda\x41\xaa\xe8\xa4\x74\xc8\x81\xea\x56\x0e\xb9\x40\x8f\x85\x83\xd4\xd1\x49\xdd\x90\x03\xd5\x2b\x1b\xf2\xd7\x3b\xab\x1a\x0a\xa1\xd0\x5f\xd1\x50\x8c\xf4\x7c\x08\x3b\x9b\xa1\x97\x24\x70\xe0\xa1\x68\xd4\xb7\xcc\xdb\x3b\xf4\xfa\x95\x79\x4e\x82\xbb\x4d\x9e\x6b\x0b\x2a\x4a\x27\x70\x4f\x16\x50\xb0\xb3\x16\xca\x29\x66\x20\x14\x4c\x9e\x20\x70\xa3\xa6\xb6\x85\xeb\x47\x6d\x5d\x3f\xda\x74\xfd\x82\x46\x81\x00\xa7\xa1\xef\x47\xdd\xfa\x5e\xa8\x09\x1a\xd0\x70\xd2\x96\x86\x93\x4d\x1a\x92\xea\xb3\x19\x09\x27\x4f\x83\x84\xb7\x6d\x49\x78\xbb\x49\x42\x5c\x49\x37\xe3\xe0\xed\xd3\xe0\xe0\xb8\x2d\x07\xc7\x9b\x1c\x7c\xbe\xc7\xa4\x69\x20\x1c\x3f\x0d\x12\xde\xb4\x25\xe1\x4d\x49\x20\xbc\x68\xc8\xc1\x9b\xf6\x1c\xec\x6a\x97\x1c\x57\x75\x4b\x8e\xdb\xb2\x59\xda\xac\x69\x65\x13\xe0\xb8\xe6\x04\xee\x2f\xb1\x5f\x3d\x3b\xdc\x05\x83\x32\x1c\xc2\x0e\xc0\xd1\x2b\xfd\x25\xc3\x8f\x1b\xde\x24\xa5\xb0\xde\x2a\x39\x6e\x79\xc3\x96\x96\xe9\x56\x40\x1d\xe0\x48\xc8\x57\x94\x44\xfa\xe9\xd6\xff\xaf\xeb\xdb\xd2\xb2\xb6\xb0\x68\x68\xc4\x65\x09\x9a\xdb\x19\x15\x05\x7e\x90\x99\xf1\x8e\xdf\x6f\xa7\xcb\x00\x34\x3b\xdd\x62\xb3\xba\xb7\x67\x4d\x78\xa8\xd9\xb2\xee\x72\x43\xef\x62\x6b\xf1\x5e\xd6\xdf\x6e\x51\xff\xa2\x48\xfd\x86\xcc\x73\x69\x8d\x4f\xa7\xb7\xfd\xf6\xc6\xa7\xd3\xdb\x86\x4d\xb1\x34\xa9\x9b\xae\xf8\x74\x7a\xdb\x75\x3b\x7c\x00\x5f\xcf\xb1\x1f\x8e\xe9\xe8\xb9\x21\x8e\x75\x74\xd2\x11\x2b\xa4\xba\x2d\xb1\x92\xe8\xb1\x27\x8e\x95\x74\xd2\x14\x2b\xa4\x7a\x5d\xb1\x7a\xbf\xb3\xb6\xb8\x18\x11\x7d\x0e\xd3\x4f\x29\x6b\x3b\xa1\x66\x15\xb3\xcd\x72\xc1\xeb\x47\xde\x4a\xee\xdf\x98\x88\x56\x82\x96\xe3\xb5\x1d\xa6\x2f\xc2\x48\x95\x87\x8b\x30\x3a\xa8\x3e\xcc\xce\x15\x99\x0e\x25\xd6\x65\xe5\x2c\x5a\xbe\x25\x79\x3e\x64\x18\x5d\xc4\x78\x51\xad\xf0\xfa\x91\x1f\xaa\x2f\x87\xa8\xa1\x4e\x2e\xeb\xa1\xfa\x14\x46\x0d\x85\x32\x1c\xda\x29\x34\x48\x70\x0f\x8c\x83\x52\xac\xb0\x9e\xcf\x98\xdf\xea\x79\xcc\x6f\x05\x02\x98\x8b\x17\xc0\x1b\x56\x34\x56\x57\x63\x7e\x65\x41\xd7\x75\x4d\x7b\xee\x9e\x63\x59\x63\xf5\x3f\xe6\xb7\xba\x1a\xf3\x5b\x4d\xc7\xfc\xd6\x0f\x18\xf3\x5b\x5d\x8d\xf9\xad\x66\x63\x7e\xab\xf3\x31\xbf\xf5\x63\xc6\xfc\x03\xb5\xb7\x5b\x55\x0a\xd3\xb2\x66\x76\xc2\x68\xc8\x7f\x3d\x63\x8c\x32\x8e\xac\x60\x78\x15\x09\x14\x02\x4b\xb7\xc0\xee\x24\x72\xac\x1f\xbe\x85\x2d\x88\xce\x29\xe7\xc8\xba\x42\x21\x2f\x53\x38\xc5\x8b\x3b\x10\x5d\xe9\xca\xd1\x76\xa9\xfb\x42\x3a\xd3\x65\x5d\xa1\x11\x19\xcf\x47\x43\x32\xde\xd0\x55\xbb\xe4\x22\xda\x40\x2e\x00\x41\x68\x87\x33\x39\xe2\x9a\xdd\x0c\xd2\x72\x38\x6b\x5a\x17\x6c\x0f\x6b\x85\xd5\x48\x46\x6f\x4e\x1c\x73\x90\xc4\x9c\x4f\x9d\xc8\xa3\xe8\xed\x3f\xf3\x35\xd1\xc7\x4e\xdb\x72\xc8\x0a\x34\x99\xcc\xd4\x38\x8c\xad\x40\xd9\x3b\xdc\x29\x2f\x23\x61\x07\x80\x7c\x94\x23\xfc\x5a\x82\x00\xd9\x3e\x29\x41\x48\xf6\x50\x95\x0d\x29\x42\xb9\x11\x09\x44\xc1\x8a\xf4\x17\xda\x18\x26\x13\x17\xc9\x15\x78\x09\x7f\x24\xd6\x83\x27\x70\xc6\xc1\xef\xaf\x7f\x7f\x55\xf2\x44\xc2\x6e\x3f\xca\xad\xde\xf5\x28\x13\xb3\x6d\xb9\x2e\xea\x58\xdb\x3a\x44\x24\x2b\xda\x0e\xcb\x89\xd5\x4d\xdb\x41\xcd\x24\x5f\x98\xbd\x00\x7b\x96\x27\x3f\xc0\x76\x22\x54\x2d\xcf\x99\x5a\x98\xfd\x10\x65\xcb\xd3\xcd\x26\xa9\x8a\xff\x30\x3f\x3a\x4b\x62\x27\x3d\x09\xab\xe2\x2f\xc3\x28\x0f\xc0\x14\x64\x4f\x04\x6e\x9d\xe2\x3b\xd9\xaa\x34\x68\xaa\x99\x52\x01\x52\xca\x79\xbf\x64\x7f\xf9\xcf\xcd\xd9\x75\x39\xd5\x5f\x1e\x05\x54\x12\x9d\xc8\x97\xd3\x1c\x03\x54\x93\xfc\xc5\xba\xb9\xde\xc7\xb0\xcc\x6d\xbb\xcd\x88\xa5\xf7\x71\x2b\xc5\x1b\x10\xfb\x27\xea\xf2\xa6\xbc\xdf\x2e\x6f\xca\xe8\x02\x38\x6f\xdc\xe4\x4d\x79\x47\x4d\x5e\x6e\x40\xd7\x3d\x5e\x7b\xe6\x9e\x63\x8f\x27\xd9\xe8\xb9\xc7\x93\x2a\x3a\xe9\xf1\x72\xa0\xba\x3d\x5e\x2e\xd0\x63\x8f\x27\x75\x74\xd2\xe3\xe5\x40\xf5\x7a\xbc\xfc\xf5\xce\x7a\xbc\x42\x28\xfc\x98\xab\x5c\x6d\x6e\x31\x4c\x79\xcb\x5b\x5d\x9a\xa0\x62\x77\x6a\x4d\x1a\x5c\x62\x48\x21\x7e\xf6\x45\x0e\x69\x46\xab\xdb\x5d\x9a\xa0\x76\x91\xa3\x31\x05\x1d\xdf\xec\x6a\xe4\x77\xab\x5b\x3c\x9a\xa0\xe6\xf7\xf5\xd9\xd7\x86\x8e\x3f\x81\x4b\x3c\xd2\x8c\x56\x97\x78\x34\x41\x2d\xfc\x9b\x32\x70\xc0\x15\x9e\x2e\x19\x68\x75\x9f\x4d\x13\x54\xe6\x5f\x5a\x0d\x19\x78\x02\xb7\xd9\xa4\x19\xad\xae\x35\x6a\x82\xca\xfc\x6f\xd6\xd7\x9b\x86\x1c\x3c\x81\x5b\x8d\xd2\x8c\x77\x6d\x39\x78\xb7\xc9\xc1\xd7\xb3\xeb\x86\x14\xbc\xeb\x83\x82\x05\x04\x02\x58\x23\x0e\xde\xb7\xe5\xe0\xfd\xd6\xf5\x56\xeb\xe2\xac\x21\x09\xef\x7f\x62\x22\xf8\xd0\xd6\xf1\x0f\x9b\x8e\x9f\x5e\x5d\x5c\x7c\xbe\x6c\x9a\x04\x3f\xd4\xf1\xbd\x38\x1b\x0d\xb9\x9a\x8d\x86\x8c\x2e\xf8\x41\xb3\x51\x6d\x92\x19\x72\x73\x6a\x4d\x0e\xf8\xe7\x55\x21\x37\x6f\x1b\x00\x68\x52\x1c\xd8\x61\x7a\xa7\x8c\x50\x46\xc4\xe3\x61\x28\x97\x64\xd1\x74\x2e\xbc\x81\x70\x4d\xfe\x7b\x20\xc2\x57\xe0\xc4\x81\x40\x34\x44\xc9\x36\x7d\x06\x73\x43\x6a\x8c\xb8\x35\xcf\x8b\x13\xf1\xfa\xb3\x8a\xb8\x09\x08\x00\xbd\xf4\x20\x48\x83\xf2\xec\x21\xa4\x4c\x90\x60\xf9\x4a\x36\x00\x2d\x87\x19\x59\x23\x9e\x7a\x49\x5d\x97\x83\x88\x27\x1a\xab\x93\x71\xae\x61\x34\x5c\x9d\xd4\xef\x2a\x50\x40\xe7\xd4\xdb\xd1\x5c\xa4\x6c\x1e\xab\x2f\xb7\x09\x19\x8c\x67\x34\x12\x61\x24\xb8\x3d\x22\xf9\xb7\xdd\x20\x84\xd0\x5f\x51\xf6\xc4\x4c\xbe\xb2\xc6\x46\x01\x15\x68\x91\xfc\x1b\x07\x14\x50\x16\x77\xf5\x81\x89\x4e\xd3\x8f\x46\xf3\xf1\x6c\x56\x42\x92\x6d\xa3\x04\x29\x63\xf2\xa8\x9c\x4b\xdb\xe6\xf9\x82\xcc\xc7\x1f\x47\x43\xd9\x91\x49\x13\xd5\xb7\xe1\x94\x9d\x16\x10\x1f\x16\x9a\xb6\x5a\xc7\x44\x39\x19\xe5\xfa\xe6\xf1\xe1\x01\xe6\x6f\x80\x9d\x64\x1b\xab\x6f\x05\xfa\x05\xb4\xae\xb9\x2a\xac\xd2\x07\xe9\xaf\xff\x07\x00\x00\xff\xff\x7a\x67\x44\x40\x97\x4a\x00\x00"

func define_pageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_define_pageHtml,
		"define_page.html",
	)
}

func define_pageHtml() (*asset, error) {
	bytes, err := define_pageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "define_page.html", size: 19095, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x6b\x6f\xdb\x38\xd6\xfe\xde\x5f\xc1\x0a\xed\x8b\x77\x67\x2b\x39\x4e\xd3\xdd\x62\x46\x36\xd0\xc6\xd9\xae\xb0\xb9\x18\x4d\xd2\xdd\x81\x21\x74\x68\xe9\xc8\x66\x23\x89\x2a\x49\x39\xf1\xfc\xfa\x05\x25\x51\x97\xd8\x8e\x6d\x59\x52\xb3\x40\xf3\xc1\x17\x89\xe7\xf6\x1c\xf2\x5c\x48\x39\x93\x89\x0b\x1e\x09\x01\x69\xe9\xfb\xd7\x38\x12\x24\x00\xcd\xb6\x4d\x1e\xe1\x70\x38\x99\x18\x23\x2c\xb0\xc1\x97\x5c\x40\xf0\x95\x72\x01\xa1\x30\xd2\x41\x5f\x3d\xca\x02\x2c\x6c\xdb\xec\x65\x63\x21\x74\x6d\x7b\x85\xe5\x9c\x72\x11\xe2\x94\x29\x46\x73\x06\xde\x40\xeb\x69\x48\x10\xe1\xc3\x40\x53\x77\xd1\x7a\x51\xea\xf6\x57\x3e\xa7\x4c\xd8\xb6\xb6\x41\xa5\xc7\xe3\xcc\x1e\xde\xa8\x90\x8f\x35\xdb\x7e\x61\xba\x64\x81\x1c\x1f\x73\x3e\xd0\x18\xbd\x47\xf0\x10\xe1\xd0\x05\x17\xcd\x99\x3e\xa5\x42\xd0\x40\x1b\xbe\x40\xa8\x3c\xcc\xa1\x7e\x1c\x84\x88\x07\xd8\xf7\xf5\x3e\x12\xf0\x20\x74\x46\x66\x73\xa1\x0d\xcb\xc3\x26\x13\xe2\xa1\x54\xc9\x08\x33\x1c\x70\xe3\x1c\x87\xc6\x25\xcc\xb0\x20\x0b\xb0\x6d\x3e\xa7\xf7\xba\x7c\x99\x13\x17\x26\x13\xf0\x39\xd8\xb6\xfc\x5c\xbe\x28\x35\x4f\x14\x40\xc8\x9c\xf7\x15\xeb\xf9\xbb\x54\x2a\x5d\x00\xf3\x7c\x7a\xaf\x0d\x4d\xac\x90\x3c\xa7\xd8\x45\x78\x31\x43\x2e\xe1\x91\x8f\x97\x88\x46\x82\xd0\x90\x6b\x29\xe6\x0a\xb7\x4c\xa5\x1b\x9f\x84\x77\x89\x66\xb6\x3d\x4c\x9c\xad\x64\x28\x25\x74\xf9\x82\xee\xe7\x44\x00\x8f\xb0\x03\x7a\xc4\x00\x79\x3e\xc5\x42\xf7\xc1\x13\xda\xd0\x30\x0c\x94\xf9\x5e\xc9\x96\xb0\xa7\x3a\xf7\xe6\xfd\xa1\xd9\x73\xc9\x22\x01\x31\xff\xb0\x8a\xa6\x8f\xd9\x0c\xf4\x7e\xbf\x65\x0c\x63\xbf\xec\xec\x00\xc2\x18\xe5\x86\xca\x0f\xd9\x38\x84\x4c\x9f\xa8\x8f\x55\x7d\x49\x18\xc5\x42\x9f\x31\x1a\x47\x5a\x31\x62\xe3\x18\xdd\xc7\x53\xf0\x53\x77\x85\xf4\x9e\xe1\x48\x1b\x32\x7a\xcf\x73\x2c\xb6\xd1\x4f\x63\x21\x68\x58\x11\x85\x90\x99\x5e\x55\xe3\xb3\x6f\xc9\x8c\x44\x1c\x1c\x1a\xba\x98\x2d\xe5\x0c\xc0\x53\x1f\xdc\x62\xb5\x94\x40\xfc\x30\xe5\xd4\x8f\x05\xc8\x45\x92\xd2\x57\xb4\xd9\x57\x3d\xa5\xd1\xba\x49\x76\x99\x4f\x32\xe3\x1c\x38\x37\xfe\xc9\xc0\xb3\xed\x8a\x41\xea\x2f\x93\x50\x82\x0b\x55\x8c\xdb\xc2\xf9\xec\x41\x30\x7c\x2a\x79\xd8\xb6\x56\x11\x30\xd4\xb7\xd1\xde\xc0\x83\xe8\x16\x8c\x0b\xca\xa0\x1d\x30\x12\xce\x4f\x80\xb1\x85\x32\x85\x02\xfd\x75\x07\x30\x2a\x5f\xcd\x9e\x5a\x35\x66\x2f\xf6\x57\x57\x32\x7c\x5f\x5d\xcc\x6a\x1e\xa2\xa3\x74\xe5\x3e\x5a\xb0\x25\x16\x5c\x30\x12\x41\xb1\x42\x1f\x45\x6e\x31\x07\xec\x6a\xd5\x20\x96\x46\x73\xe4\x50\x5f\x85\x6b\x6d\x38\x06\x46\xa8\x9b\x45\xac\x2d\xa3\x2b\xc1\x1d\x7d\xc1\x7e\x0c\x4f\x13\x6a\x43\x75\x3f\xc1\xa5\x14\xbf\x7c\x2c\x73\x10\xc3\xe1\x0c\xd0\x2b\x1f\xa3\x5f\x07\xf9\x0d\xe3\x9c\x70\x39\xf5\xaa\x06\xed\x60\xca\xda\x00\x55\xa8\x8c\xee\x89\x2b\xe6\xfa\x5b\x06\x81\x0c\x01\xaf\x7c\x6c\xa4\xc6\xdb\x76\x90\xea\x57\x07\x85\x94\x51\x82\x45\x9e\xf4\x37\x30\xd0\x7d\xb6\x02\x48\x96\x8c\x93\xb7\x17\xc5\x0c\x2a\xbf\x16\xa9\xe2\x11\xd1\xa3\x0c\x1e\x40\xd0\x75\x0a\xbf\x80\xa0\x83\x1c\x7e\x01\x01\x4d\xe3\xf7\xce\x19\x5c\x2a\xd6\x44\x0a\x4f\x45\xb7\x98\xc0\x0f\x45\xf0\x67\x06\xcf\x51\xec\x3e\x85\x27\x62\xdb\xc9\xe1\x05\xeb\x1a\x49\xbc\x20\xee\x36\x8b\x27\x72\xdb\x49\xe3\x05\xeb\xbd\xf3\x78\x41\xda\x55\x22\xaf\x4c\xc7\xce\x32\xb9\x8a\x55\xfb\xe7\xb0\x1b\x2a\xb0\x5f\x87\xf0\x96\x43\xad\xd2\xe1\x1f\x0c\xb6\x54\x0e\x1b\xe5\xbd\xae\x5b\x71\x04\x10\x94\x4a\x8e\x00\x82\xa2\xe6\x08\x20\xa8\x5d\x74\x4c\x26\x92\x97\xf1\x2f\x22\x9d\x5b\xb3\x80\x90\x0c\x12\x1f\x1c\xc4\x41\x3a\xe3\x20\x06\xd2\x2b\x35\x18\xa0\xe9\x4c\x8f\x39\x44\x8e\xd0\x90\x8b\x05\xce\xbe\x0c\x0a\xb5\xc6\x8e\xb0\xed\xb2\x9e\xc9\x85\x2d\x9e\x6c\xb9\x5a\x72\xbd\xae\x8b\xa5\x91\xd7\x41\xad\x34\x22\xfc\x0e\xc5\x1c\xcf\x60\xaf\x7a\x69\xe4\x35\x52\x2e\x15\xd2\x5b\x2c\x99\x0e\xc4\xf1\x67\xc5\xa4\x40\xec\xbe\x60\x92\x52\xdb\xa9\x97\x72\xce\x35\xca\xa5\x9c\xb6\xdb\x6a\x49\x8a\x6d\xa7\x58\xca\x39\xef\x5d\x2b\xe5\x94\x5d\x95\x4a\xe5\x79\xd8\x54\xa5\x34\x99\xf4\x7e\x41\x11\xbd\x03\x14\xc5\x8c\x78\x4b\x87\xf3\x5f\x2b\x63\x5d\x46\x23\xb9\x76\x2b\x41\x08\x33\x10\x1a\xea\x65\xb1\x0a\xfd\xd2\xcb\xb6\xfb\xb7\xe5\x40\xb5\xa4\x27\x93\x7b\x22\xe6\x88\x84\x2e\x3c\x54\x6d\xfc\xa2\xb0\xbd\x93\x16\x96\x81\xc4\xf9\xfc\x38\x27\xe1\x5d\x3a\x0f\x32\x79\xd9\xb5\xcc\x79\x55\xdf\x8d\x60\x41\x1c\x28\x6b\x37\x99\x18\xa7\xd2\x80\x6c\x78\x91\x37\xf3\x0d\xff\x7d\xd2\xfa\x5e\x26\xf5\x1b\x31\xe9\x82\xc6\xa1\x00\xb7\x6d\x9b\x2a\xe9\x7a\x27\xf3\xde\x35\x62\x5e\x5a\x61\x3f\x3b\xe3\x4e\x1a\x31\x2e\xe9\x02\x9e\x9d\x6d\xc7\x8d\xd8\xf6\x61\x81\xc9\x33\x74\xdc\xdb\xa6\x1c\xf7\xba\x49\xdb\x36\x37\x5f\xae\x57\xea\xbd\x5c\xaf\x68\xbd\x5c\xaf\x66\xe7\xf5\xb8\x04\x9e\x4c\x5e\xb9\x9e\x31\x82\xc5\x25\x0e\xf6\xec\x62\x0a\x26\x28\xe3\x42\x58\x7d\x2e\xe5\xce\x68\xc6\xf0\xf2\x91\x25\x69\xe5\x5c\xea\xbc\x5c\x6f\x6d\xef\x97\xd5\xf3\x56\x48\x5d\xe0\x48\xc8\x11\xf9\xf8\xf4\x62\x41\xd0\x8d\x96\x6b\xfa\xcb\xaa\x92\x31\x97\x85\xa6\xd2\x31\xae\x0c\xef\x46\xc5\x64\xb5\x3e\xa9\xa3\xc7\x00\x0a\x1d\xbd\x4a\xc7\xdb\x80\x8e\x4f\xf4\xc2\x29\x82\x69\x2b\xbc\x0b\xd6\x6b\x7a\xe4\x15\xb8\x5f\x57\xe0\xae\x52\xfc\xc8\xe6\xda\x89\xe2\xae\xbb\xeb\xd3\xf1\x6d\x07\xed\xf5\xe9\xf8\x76\xaf\xbe\x5a\x6a\xd5\x44\x63\x7d\x3a\xbe\x6d\xb1\xa3\x3e\x14\xbb\x9f\x2d\x75\x8e\x62\xf7\x3d\x75\x22\xb6\x9d\xa6\xba\x60\x5d\xa3\xab\x2e\x88\xbb\x6d\xab\x13\xb9\xed\xf4\xd5\x05\xeb\xbd\x1b\xeb\x82\xb4\xab\xce\xba\x32\x1d\x3b\x3b\x84\x38\xa5\xac\xee\xce\x3e\xdb\xb2\x21\xbc\x9e\xf0\x7a\xc9\x6b\xd1\xfd\x1b\x13\x51\x8b\xd0\x72\xfd\xfa\x87\x10\x4e\x14\x97\x0a\x61\x27\x8a\x8b\x4a\xd8\x89\xe2\x83\x4a\xe1\xa2\x69\x97\x7c\x8d\xcb\xbc\xae\x51\x1e\xad\xb3\xa1\xaf\xa6\xe2\xa3\x5a\x46\x0a\x90\x1e\x2b\x36\xf6\x2b\x57\x5e\xb7\x2b\xf9\x7a\xc9\xab\x82\xd5\x85\x96\xe5\xca\x29\x53\x15\x9c\x5f\x69\x40\xb2\x4e\xc2\x05\x30\x0e\x4f\x69\x20\xe7\x5e\x55\x83\xfc\xca\x8f\x3d\x4d\x21\x9d\x9f\xa6\x58\x5d\x9c\xa6\x58\xa1\x00\xe6\x61\x07\xf8\x5e\x55\x9f\xd5\xcc\x69\x4a\x21\xbd\xc5\xda\xef\x40\x1c\x7f\x96\x7e\x0a\xc4\xee\x2b\x3f\xab\xb5\xd3\x14\xeb\x80\xd3\x14\xeb\xc7\x9c\xa6\x58\xad\x9d\xa6\x58\xb5\x4f\x53\xac\xae\x4f\x53\xac\x16\x4e\x53\xb6\x96\x7c\x79\x98\xaa\x55\x4d\x8d\x77\xa2\x3a\x2e\xa7\xcc\xf2\xda\xcf\xcf\xbd\x19\x8d\xf8\x9b\x33\xc6\x28\xe3\xc8\x0a\x7b\x57\xb1\x40\x11\xb0\x6c\xf1\x6a\x43\x74\x4e\x39\x47\xd6\x15\x8a\x78\x33\x02\xc7\xd8\xb9\x03\xb1\x5e\x56\x7e\xaf\x39\x71\x1f\xc9\x06\x59\xd6\x15\x32\xc9\x70\x6a\xf6\xc8\x70\x9b\xac\xcd\x65\x69\x08\x82\xd0\x52\x61\x4a\x4a\x3b\xb4\xc9\xbd\xe6\x36\x69\x89\x67\x34\xb2\xb7\xaa\x98\x59\xe3\x1d\x59\x6d\x84\x78\xf8\x7f\xe1\x94\x47\xbf\x55\xa8\x93\xfd\x46\x85\x7d\xb2\x3d\x8b\xdc\x64\x86\x41\x3a\xc3\x02\xea\xc6\x3e\x45\x27\x9f\xb4\xea\xd6\x5c\x69\x28\xb2\xc2\xf2\xb0\x54\xdb\x64\x9a\x5a\x61\xae\x72\x6f\x23\xb5\x74\xf4\x7a\xf2\xab\xb8\xf8\x79\xd1\x9b\x35\xf4\xa0\x16\xc1\x2a\x7d\xba\x3e\xb6\xc8\xcf\xe8\xd7\x2a\x90\x32\x28\x6b\x90\xbd\xad\xc1\x30\x99\x5f\xd2\x07\xff\x0f\xdf\x51\xa2\x3d\xf8\x02\x67\x08\x20\xed\x48\xfb\xcb\x9a\x3b\x52\xea\xea\x2d\xa5\xf7\xc6\x5b\x8a\xcc\xb6\xa5\xe7\xf2\x90\x57\xb1\x6e\xa4\xbc\x52\x5e\x3f\x19\xae\x25\xcd\x36\x60\x33\xca\xbd\xf2\x14\xf9\x66\xdf\xe4\xa1\x69\x13\xfd\x16\xdf\x9c\x15\x5e\x79\x92\xc1\x1a\xdf\xb4\xb4\x3c\xd6\xcd\xfc\x28\x8f\x8a\xab\x73\x27\x8b\x8a\x5b\x66\x9f\xe2\xb0\x76\xfa\x65\x2c\xb6\xcc\xbf\x95\x08\xbd\x09\xb1\x6d\x1a\x8d\x4b\xba\x3c\xcd\x62\x1d\xea\x1d\xc0\xfd\xf1\xf7\x9b\xb3\xeb\xb5\x60\x7f\x5c\x0a\xd8\x06\x75\x4a\xbd\x16\xe8\x84\x7c\x37\x98\x3f\x5a\x37\xd7\x4f\x60\x2c\x13\xd7\x46\x3d\x12\xda\x27\xd0\x95\xc4\xbb\x43\xdb\x72\x8f\x1b\xf1\xae\x7b\xdc\x31\xef\xa0\xc7\x1d\x33\xea\x00\xe7\x7b\xb6\xb8\x63\xde\x48\x8b\x9b\x0b\x6f\xb1\xc3\x3d\x10\xc5\x9f\x1d\xae\x02\xb1\xfb\x0e\x57\x4a\x6d\xa7\xc3\xcd\x39\xd7\xe8\x70\x73\xda\x6e\x3b\x5c\x29\xb6\x9d\x0e\x37\xe7\xbc\x77\x87\x9b\x53\x76\xd5\xe1\x96\xe7\xe1\xff\xf2\xf3\x82\xfb\x3d\xf2\x33\xe6\x4d\x3d\x3a\x38\xb6\x46\xcf\xeb\x69\x26\x69\x5a\x33\x8f\x10\xde\xb6\x6f\xda\x8e\xf6\x34\xf3\xe8\xd9\xed\xf5\xd9\xe7\xe7\xe7\xab\x66\x9e\x3c\x1b\x3f\x43\xcb\x9a\x79\x18\xf2\xd2\x7a\x7e\x96\x35\xf3\x0c\xeb\x17\xeb\xf3\xcd\xf3\xb3\xed\x6f\x8d\xd8\xf6\xf9\xec\xba\x1b\xd3\x1c\x08\x05\xb0\x1d\x6d\xfb\x7b\x33\xcf\x1e\x5b\x17\x67\xcf\x24\x30\xbe\x6f\xc4\xa0\xd3\xab\x8b\x8b\x0f\x97\x35\x83\xfd\xe3\xad\xcf\x88\x51\x87\x97\xb6\x3e\x23\x5e\x6c\x7d\x26\xf7\x0e\xda\xfa\x2c\xb6\x2a\x23\x6e\x8c\xad\x51\xed\xdf\xe7\x45\xdc\xb8\xdd\x9d\xbc\xa0\xe1\xc0\x0e\x91\x39\x66\x84\x32\x22\x96\x87\xf0\xb8\x24\x4e\x9d\x9f\x15\xe6\xf4\xd7\xe4\xcf\x83\xe8\x3f\x03\x27\x2e\x84\x62\x3f\x1e\x6a\xa1\x66\x4c\x6e\xc8\xf6\x3d\xeb\xc2\xe2\xca\x06\xf7\xc1\x3b\x11\xe6\xcb\xd1\xd5\xe9\xcd\xef\xe3\x33\x34\x17\x81\x3f\x7c\x61\xa6\x6f\xb2\xc3\x07\xec\x66\x55\x6f\x00\x02\x23\x67\x8e\x19\x07\x31\xd0\x62\xe1\xe9\xef\x55\x41\x9c\x34\xfa\x3b\xfe\x8b\x28\x94\x5e\x37\x7b\x29\x51\x89\xf7\x5c\x88\x48\x87\xef\x31\x59\x0c\xb4\xff\xe8\xb7\x1f\xf4\x53\x1a\x44\x58\x90\xa9\x0f\x1a\x72\x68\x28\xc9\x06\x9a\x75\x36\x00\x77\xa6\x4a\xee\x94\x52\xf2\x1f\x68\x0b\x02\xf7\x11\x65\xa2\x34\x38\xf9\x87\x1c\x03\x37\xf9\x35\x8b\x9e\x7c\x79\x83\x48\x48\x04\xc1\xbe\xce\x1d\xec\xc3\xa0\x6f\x1c\x69\x43\xf3\xa5\xae\xcb\x05\x6b\x9d\xd9\x19\x5b\x19\x51\x10\x03\x3f\xd9\x74\x60\xc2\x89\x05\x22\x0e\x0d\x35\xf5\x8f\xb4\x3c\xbc\x90\xdf\x0d\xe2\x50\x49\x2e\x61\x24\x9e\xad\xeb\x2b\xe4\x29\x15\x27\x7f\x02\x1f\x68\x6f\x8f\x1f\xde\x1e\xe7\x3c\x14\x5e\x57\x09\x20\x5f\x80\x71\x42\x43\xdb\x56\xbc\xb9\xfa\xa0\xbf\x3d\x36\xa2\x70\xa6\x21\xb1\x8c\x60\xa0\x91\x00\xcf\xa0\x27\x2f\xac\x08\xc3\x51\xe4\x83\x2e\x68\xec\xcc\xf5\x8a\xe0\xfe\xf1\xd1\x43\xff\xf8\x68\x7f\xd1\xfd\xe3\x23\x63\x4f\x51\x27\x27\x0f\xfd\x93\x93\x1a\xa2\x4e\x4e\xf6\x15\xf5\xee\xf8\xa1\xff\xae\x06\xa0\xfd\x77\xc7\xfb\x8a\x7a\x7f\xf4\xd0\x7f\x5f\x07\xc0\xf7\x1b\x00\xe4\x62\xe9\x03\x9f\x83\xec\xf1\x52\xc7\xca\xa8\xd0\x73\x38\xdf\x2a\xc4\xe1\xbc\x97\xa4\x41\x43\x8e\x4e\x17\xb5\x5a\xa8\xe6\x94\xba\xcb\x52\x9f\x4a\xdc\x81\x16\x61\xb9\x5e\x26\x13\x01\x41\xe4\x63\x01\xe8\x0f\x79\xe5\x0f\x64\xc8\x10\x92\xb7\xca\x26\x77\x18\x89\x44\x59\x99\x6f\x78\x81\xd3\xab\xda\x70\x81\x19\x92\xda\xa0\x81\xea\xf1\x6d\xfb\x37\xb3\x97\xde\xde\x85\xc3\xe3\xd8\x81\x38\x73\x9e\x30\xf2\x1b\xef\x95\x92\xe8\xcd\x87\x4f\x9f\xce\x46\x53\x12\xda\x76\x40\xc2\xde\x34\x0e\x5d\x1f\x8c\x80\x84\xc6\x37\xae\xf6\xd8\x38\x73\xd4\x8d\xe4\x62\x76\x42\x53\x55\xf1\xa5\xae\xaf\x34\xf1\xbb\x76\xdf\x09\x61\xf2\x92\x2e\x74\xb3\x97\x82\x6d\xf6\x92\x78\xf9\xdf\x00\x00\x00\xff\xff\xed\xe9\x05\xa9\xd6\x4f\x00\x00"

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 20438, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"define_page.html": define_pageHtml,
	"index.html": indexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"define_page.html": &bintree{define_pageHtml, map[string]*bintree{}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

